services:
  # zookeeper:
  #   image: docker.io/bitnami/zookeeper:3.8
  #   hostname: zookeeper
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   volumes:
  #     - "zookeeper_data:/bitnami"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes

  # collector:
  #   image: otel/opentelemetry-collector:0.72.0
  #   command: [ "--config=/etc/otel-collector-config.yml" ]
  #   volumes:
  #     - ./otel-config.yml:/etc/otel-collector-config.yml
  #   ports:
  #     - "4317:4317"
  #   depends_on:
  #     - jaeger

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
  
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.43
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      # - METRICS_STORAGE_TYPE=prometheus
    ports:
      - "16686:16686"
      - "14250:14250"
      - "4317:4317"
      - "4318:4318"

  service-uno:
    container_name: service-uno
    build: otel-uno/
    ports:
      - "8080:8080"
    depends_on:
      - kafka

  service-dos:
    container_name: service-dos
    build: otel-dos/
    ports:
      - "8081:8081"
    depends_on:
      - kafka

  service-cuatro:
    container_name: service-cuatro
    build: otel-cuatro/
    ports:
     - "8083:8083"

volumes:
  kafka_data:
    driver: local
  # zookeeper_data:
  #   driver: local